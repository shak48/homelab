- name: Check if template VM already exists
  stat:
    path: "/etc/pve/qemu-server/{{ template_vm_id }}.conf"
  register: template_vm_stat

- name: Skip if template already exists
  debug:
    msg: "Template VM {{ template_vm_id }} already exists. Skipping creation."
  when: template_vm_stat.stat.exists

- name: Create cloud-init template VM
  block:

    - name: Ensure image and snippet directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "/var/lib/vz/template"
        - "/var/lib/vz/snippets"
      delegate_to: "{{ template_node }}"

    - name: Download Ubuntu cloud image (QCOW2)
      get_url:
        url: "{{ template_image_url }}"
        dest: "/var/lib/vz/template/{{ template_image_file }}"
        mode: '0644'
        force: yes
      delegate_to: "{{ template_node }}"

    - name: Rename .img to .qcow2 (if needed)
      command: >
        mv /var/lib/vz/template/{{ template_image_file }}
           /var/lib/vz/template/{{ template_qcow2_name }}
      args:
        creates: "/var/lib/vz/template/{{ template_qcow2_name }}"
      when: template_image_file.endswith('.img')
      delegate_to: "{{ template_node }}"

    - name: Resize the downloaded cloud image
      command: >
        qemu-img resize /var/lib/vz/template/{{ template_qcow2_name }} {{ template_disk_size }}
      delegate_to: "{{ template_node }}"

    - name: Create VM shell
      command: >
        qm create {{ template_vm_id }}
        --name {{ template_vm_name }}
        --memory {{ template_memory }}
        --cores {{ template_cores }}
        --sockets {{ template_sockets }}
        --net0 virtio,bridge={{ template_net_bridge }}
        --agent 1
        --ostype l26
        --scsihw virtio-scsi-single
        --serial0 socket
        --vga serial0
      delegate_to: "{{ template_node }}"

    - name: Import cloud image disk
      command: >
        qm importdisk {{ template_vm_id }}
        /var/lib/vz/template/{{ template_qcow2_name }}
        {{ template_storage }}
      delegate_to: "{{ template_node }}"

    - name: Attach disk and cloud-init
      command: >
        qm set {{ template_vm_id }}
        --scsi0 {{ template_storage }}:vm-{{ template_vm_id }}-disk-0
        --ide2 {{ template_storage }}:cloudinit
        --boot order=scsi0;ide2;net0
        --ipconfig0 ip=dhcp
      delegate_to: "{{ template_node }}"

    - name: Copy cloud-init user-data snippet
      template:
        src: user-data.yml.j2
        dest: /var/lib/vz/snippets/user-data.yml
      delegate_to: "{{ template_node }}"

    - name: Set cloud-init config with cicustom
      command: >
        qm set {{ template_vm_id }}
        --cicustom "user=local:snippets/user-data.yml"
      delegate_to: "{{ template_node }}"
    - name: Set cloud-init user and password
      command: >
        qm set {{ template_vm_id }}
        --ciuser {{ template_user }}
        --cipassword {{ template_password }}
      delegate_to: "{{ template_node }}"

    - name: Convert to template
      command: qm template {{ template_vm_id }}
      delegate_to: "{{ template_node }}"

  when: not template_vm_stat.stat.exists