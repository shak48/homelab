- name: Check if template VM already exists
  stat:
    path: "/etc/pve/qemu-server/{{ template_vm_id }}.conf"
  register: template_vm_stat

- name: Destroy if template already exists
  command: >
    qm destroy "{{template_vm_id}}" --purge 1 --destroy-unreferenced-disks 1  
  when: template_vm_stat.stat.exists

- name: Create cloud-init template VM
  block:
    - name: Ensure image and snippet directories exist
      file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "/var/lib/vz/template"
        - "/var/lib/vz/snippets"

- name: Check if cloud image already exists
  stat:
    path: "/var/lib/vz/template/{{ template_qcow2_name }}"
  register: img_stat

- name: Download cloud image (QCOW2) only if missing
  get_url:
    url: "{{ template_image_url }}"
    dest: "/var/lib/vz/template/{{ template_qcow2_name }}"
    mode: '0644'
  when: not img_stat.stat.exists

- name: Resize the downloaded cloud image
  command: >
    qemu-img resize /var/lib/vz/template/{{ template_qcow2_name }} {{ template_disk_size }}

- name: Create VM shell
  command: >
    qm create {{ template_vm_id }}
    --name {{ template_vm_name }}
    --memory {{ template_memory }}
    --cores {{ template_cores }}
    --sockets {{ template_sockets }}
    --net0 virtio,bridge={{ template_net_bridge }}
    --agent 1
    --ostype l26
    --scsihw virtio-scsi-single
    --serial0 socket
    --vga serial0

- name: Import cloud image disk
  command: >
    qm importdisk {{ template_vm_id }}
    /var/lib/vz/template/{{ template_qcow2_name }}
    {{ template_storage }}

- name: Attach disk and cloud-init
  command: >
    qm set {{ template_vm_id }}
    --scsi0 {{ template_storage }}:vm-{{ template_vm_id }}-disk-0
    --ide2 {{ template_storage }}:cloudinit
    --boot order=scsi0;ide2;net0
    --ipconfig0 ip=dhcp

- name: Copy cloud-init user-data snippet
  template:
    src: user-data.yml.j2
    dest: /var/lib/vz/snippets/user-data.yml

- name: Set cloud-init config with cicustom
  command: >
    qm set {{ template_vm_id }}
    --cicustom "user=local:snippets/user-data.yml"

- name: Set cloud-init user and password
  command: >
    qm set {{ template_vm_id }}
    --ciuser {{ template_fallback_user }}
    --cipassword {{ template_fallback_user_password_hash }}

- name: Convert to template
  command: qm template {{ template_vm_id }}

